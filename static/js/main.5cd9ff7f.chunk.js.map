{"version":3,"sources":["components/Header.js","components/Keg.js","components/KegList.js","components/ReusableForm.js","components/NewKegFrom.js","components/KegDetail.js","components/EditKegForm.js","actions/index.js","actions/ActionTypes.js","components/KegContol.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/form-visible-reducer.js","reducers/keg-list-reducer.js","reducers/select-keg-reducer.js","reducers/editing-keg-reducer.js","index.js"],"names":["headerStyle","padding","textAlign","backgroundColor","color","fontFamily","Header","className","style","Keg","props","Fragment","Col","Card","border","width","height","margin","Title","name","Text","price","quantity","Button","onClick","sellKeg","id","variant","whenKegClicked","KegList","Row","Object","values","kegList","map","keg","console","log","onKegSelection","onchangeKegQuantity","brand","flavor","key","ReusableForm","Form","onSubmit","formSubmissionHandler","Group","Control","type","placeholder","buttonText","NewKegForm","event","preventDefault","onNewKegCreation","target","value","parseInt","quantityMessage","v4","KegDetail","selectedKeg","onClickingEdit","onDeletingKeg","Container","marginTop","display","justifyContent","alignItems","Body","EditKegForm","onEditKeg","addKeg","kegData","connect","state","allKombuchaList","formVisibleOnPage","editingKeg","dispatch","handleClick","currentlyVisibleState","kegToEdit","action","a","newKeg","newSelectedKeg","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","assign","newState","decrasedQuantity","updatedKegList","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","subscribe","getState","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5cd9ff7f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst headerStyle ={\r\n  padding: \".66rem 0\",\r\n  textAlign: \"center\",\r\n  backgroundColor: \"#3C5C60\",\r\n  color: \"#fff\",\r\n  fontFamily: \"'Montserrat', sans-serif\",\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\" style={headerStyle}>\r\n      <h1 >Tap Room</h1>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Header; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Col , Button} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Keg(props) {\r\n  \r\n  const kegStyles = {\r\n    textAlign: 'center',\r\n    border: '2px solid #3C5C60',\r\n    width: '300px',\r\n    height: '300px',\r\n    padding: '2%',\r\n    margin: '2%',\r\n  };\r\n  \r\n  function inStock(quantity) {\r\n    return quantity > 0 ? <Button onClick={() => props.sellKeg(props.id)} variant=\"outline-secondary\" >Sell</Button>\r\n    : \"out of stock\"\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Col style={{padding: '10px'}}>\r\n          <Card style={kegStyles} >\r\n            <Card.Title style={{backgroundColor: '#8FABAF', padding: '8px'}}> {props.name}</Card.Title>\r\n            <Card.Text>\r\n                <strong>Price:</strong> ${props.price} <br/>\r\n                <strong>pints in keg:</strong> { props.quantity > 0 ? props.quantity : \"out of stock\" }\r\n            </Card.Text>\r\n            {inStock(props.quantity)}\r\n            <Button onClick={() => props.whenKegClicked(props.id)} variant=\"outline-secondary\" >Details</Button>\r\n          </Card>\r\n        </Col>\r\n      </div>\r\n      \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nKeg.propTypes = {\r\n  sellKeg: PropTypes.func,\r\n  whenKegClicked: PropTypes.func,\r\n  name: PropTypes.string,\r\n  brand: PropTypes.string,\r\n  price: PropTypes.number,\r\n  flavor: PropTypes.string,\r\n  quantity: PropTypes.number,\r\n  id: PropTypes.string,\r\n}\r\n\r\nexport default Keg; ","import React from 'react';\r\nimport Keg from './Keg';\r\nimport PropTypes from 'prop-types';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nfunction KegList(props){\r\n \r\n  return (\r\n    <React.Fragment>\r\n      {/* <h2 className=\"text-center\" >Keg list</h2> */}\r\n        <Row >\r\n          {Object.values(props.kegList).map(keg => {\r\n            console.log(keg)\r\n            return <Keg \r\n              whenKegClicked = {props.onKegSelection}\r\n              sellKeg = {props.onchangeKegQuantity}\r\n              name={keg.name}\r\n              brand={keg.brand} \r\n              price={keg.price} \r\n              flavor={keg.flavor} \r\n              quantity={keg.quantity}\r\n              id= {keg.id}\r\n              key= {keg.id}\r\n              />\r\n          })} \r\n        </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nKegList.propTypes = {\r\n  kegList: PropTypes.object,\r\n  onKegSelection: PropTypes.func,\r\n  onchangeKegQuantity: PropTypes.func\r\n}\r\n\r\nexport default KegList ; ","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nfunction ReusableForm(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={props.formSubmissionHandler}>\r\n        <Form.Group>\r\n          <Form.Control \r\n            type='text'\r\n            name='name'\r\n            placeholder='Kombucha name' />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control \r\n            type='text'\r\n            name='brand'\r\n            placeholder='Brand name' />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control \r\n            type='text'\r\n            name='price'\r\n            placeholder='Price' />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control \r\n            type='text'\r\n            name='flavor'\r\n            placeholder='flavor' />\r\n        </Form.Group>\r\n        <Button type='submit' variant=\"outline-dark\">{props.buttonText}</Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n};\r\n\r\nexport default ReusableForm; ","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport ReusableForm from './ReusableForm';\r\nimport { v4 } from 'uuid';\r\n\r\nfunction NewKegForm(props){\r\n\r\n  const handleNewKegFormSubmission =(event) => {\r\n    event.preventDefault();\r\n    props.onNewKegCreation({\r\n      name: event.target.name.value,\r\n      brand: event.target.brand.value,\r\n      price: parseInt(event.target.price.value),\r\n      flavor: event.target.flavor.value,\r\n      quantity: 4,\r\n      quantityMessage: null,\r\n      id: v4()\r\n    })\r\n  } \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReusableForm formSubmissionHandler={handleNewKegFormSubmission} buttonText=\"Add\" />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nNewKegForm.propTypes = {\r\n  onNewKegCreation: PropTypes.func\r\n}\r\n\r\nexport default NewKegForm; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Button, Card } from 'react-bootstrap';\r\n\r\nfunction KegDetail(props){\r\n  const { selectedKeg , onClickingEdit, onDeletingKeg} = props;\r\n\r\n  const kegDetailStyles = {\r\n    marginTop: '2%',\r\n    // textAlign: 'center',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n\r\n  return (\r\n      <Container>\r\n        <Card style={kegDetailStyles} >\r\n          <Card.Body>\r\n            <Card.Title style={{textAlign: 'center'}}><strong>{selectedKeg.name}</strong> </Card.Title>\r\n              <Card.Text> \r\n                <li>Brand: <strong>{selectedKeg.brand}</strong></li>\r\n                <li>Price: <strong>${selectedKeg.price}</strong></li>\r\n                <li>Flavor:<strong>{selectedKeg.flavor}</strong> </li>\r\n                <li>Pints in keg:<strong> {selectedKeg.quantity}</strong></li>               \r\n              </Card.Text>\r\n            <Button onClick={() => onClickingEdit(selectedKeg.id)} variant=\"outline-dark\">Edit</Button>\r\n            <Button onClick={() =>  onDeletingKeg(selectedKeg.id)} variant=\"outline-dark\">Delete</Button>\r\n          </Card.Body>\r\n         </Card>\r\n      </Container>\r\n  )\r\n}\r\n\r\nKegDetail.propTypes = {\r\n  selectedKeg: PropTypes.object,\r\n  onClickingEdit: PropTypes.func,\r\n  onDeletingKeg: PropTypes.func\r\n}\r\n\r\nexport default KegDetail ; ","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction EditKegForm(props){\r\n\r\n  const handleEditKegFormSubmission =(event) => {\r\n    event.preventDefault();\r\n    props.onEditKeg({\r\n      name: event.target.name.value,\r\n      brand: event.target.brand.value,\r\n      price: parseInt(event.target.price.value),\r\n      flavor: event.target.flavor.value,\r\n      quantity: props.selectedKeg.quantity,\r\n      id: props.selectedKeg.id\r\n    })\r\n  } \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReusableForm formSubmissionHandler={handleEditKegFormSubmission} buttonText=\"Update\" />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nEditKegForm.propTypes = {\r\n  selectedKeg: PropTypes.object,\r\n  onEditKeg: PropTypes.func,\r\n}\r\n\r\nexport default EditKegForm; ","import * as a from './ActionTypes';\r\n\r\nexport const addKeg = (kegData) =>{\r\n  const { name, brand, price, flavor, quantity, id } = kegData;\r\n  return {\r\n    type: a.ADD_KEG,\r\n    name: name,\r\n    brand: brand,\r\n    price: price,\r\n    flavor: flavor,\r\n    quantity: quantity,\r\n    id: id\r\n  }\r\n};\r\nexport const deleteKeg = (id) => {\r\n  return {\r\n    type: a.DELETE_KEG,\r\n    id\r\n  }\r\n}\r\nexport const toggleForm = () => ({\r\n  type: a.TOGGLE_FORM\r\n});\r\nexport const sellKeg = (id) => ({\r\n  type: a.SELL_KEG,\r\n  id: id\r\n});\r\nexport const editingKeg = () => ({\r\n  type: a.EDITING_KEG\r\n});\r\nexport const selectKeg = (kegData) => {\r\n  const { name, brand, price, flavor, quantity, id } = kegData;\r\n    return {\r\n    type: a.SELECT_KEG,\r\n    name: name,\r\n    brand: brand,\r\n    price: price,\r\n    flavor: flavor,\r\n    quantity: quantity,\r\n    id: id\r\n  };\r\n};\r\nexport const unselectKeg = () => ({\r\n  type: a.UNSELECT_KEG\r\n});","export const ADD_KEG = 'ADD_KEG';\r\nexport const DELETE_KEG = 'DELETE_KEG';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const SELECT_KEG = \"SELECT_KEG\";\r\nexport const UNSELECT_KEG = \"UNSELECT_KEG\";\r\nexport const EDITING_KEG = 'EDITING_KEG';\r\nexport const SELL_KEG = 'SELL_KEG';\r\n\r\n ","import React from 'react';\r\nimport KegList from './KegList';\r\nimport NewKegForm from './NewKegFrom';\r\nimport KegDetail from './KegDetail';\r\nimport EditKegForm from './EditKegForm';\r\nimport { connect } from 'react-redux';\r\nimport * as a from './../actions';\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction KegControl (props) {\r\n  const { dispatch } = props;\r\n\r\n const handleClick = () =>{\r\n    const action = a.toggleForm();\r\n    dispatch(action);\r\n  }\r\n  const handleClickToListfromDetail = () =>{\r\n    const action2 = a.unselectKeg();\r\n    dispatch(action2);\r\n  }\r\n  const handleClickToListfromEdit = () =>{\r\n    const action2 = a.unselectKeg();\r\n    dispatch(action2);\r\n    const action3 = a.editingKeg();\r\n    dispatch(action3);\r\n  }\r\n\r\n const handleAddingNewKegToList = (newKeg) => {\r\n    const action =a.addKeg(newKeg);\r\n    dispatch(action);\r\n    const action2 = a.toggleForm();\r\n    dispatch(action2);\r\n  }\r\n\r\n  const handleChangingSelectedKeg = (id) => {\r\n    const newSelectedKeg = props.allKombuchaList[id]\r\n    const action =a.selectKeg(newSelectedKeg);\r\n    dispatch(action);\r\n  }\r\n\r\n  const handleDecreamentKegQuantity = (id) =>{\r\n    const action = a.sellKeg(id);\r\n      dispatch(action);\r\n  }\r\n\r\n  const handleEditClick = () => {\r\n    const action =a.editingKeg();\r\n    dispatch(action);\r\n  }\r\n\r\n  const handleEditingKegInList = (kegToEdit) =>{\r\n    const action =a.addKeg(kegToEdit);\r\n    dispatch(action);\r\n    const action2 =a.editingKeg();\r\n    dispatch(action2);\r\n    const action3 = a.unselectKeg();\r\n    dispatch(action3);\r\n  }\r\n\r\n  const handleDeletingKegInList = (id) => {\r\n    const action = a.deleteKeg(id);\r\n    dispatch(action);\r\n    const action2 = a.unselectKeg();\r\n    dispatch(action2);\r\n  }\r\n\r\n  let currentlyVisibleState= null;\r\n  if(props.editingKeg){\r\n    currentlyVisibleState = \r\n    <div>\r\n      <EditKegForm selectedKeg={props.selectedKeg} onEditKeg={handleEditingKegInList} />\r\n      <Button  onClick ={handleClickToListfromEdit} variant=\"outline-dark\">Return to List</Button>\r\n    </div>\r\n  } \r\n  else if(props.selectedKeg != null ) {\r\n    currentlyVisibleState = \r\n    <div>\r\n      <KegDetail selectedKeg={props.selectedKeg} onClickingEdit={handleEditClick} onDeletingKeg={handleDeletingKegInList} />\r\n      <br/>\r\n      <Button onClick ={handleClickToListfromDetail} variant=\"outline-dark\">Return to List</Button>\r\n      </div>\r\n  } \r\n  else if(props.formVisibleOnPage){\r\n    currentlyVisibleState = \r\n    <div>\r\n      <NewKegForm onNewKegCreation={handleAddingNewKegToList}/>\r\n      <Button onClick={handleClick} variant=\"outline-dark\">Return to List</Button>\r\n    </div>\r\n  } \r\n  else {\r\n    currentlyVisibleState =\r\n    <div>\r\n      <Button onClick={handleClick} variant=\"outline-dark\">Add New Keg</Button>\r\n      <KegList kegList={props.allKombuchaList} onKegSelection={handleChangingSelectedKeg} onchangeKegQuantity={handleDecreamentKegQuantity}/>\r\n    </div>\r\n  }\r\n\r\n  const kegControlStyle= {\r\n    width: '80vw',\r\n    height: 'auto',\r\n    margin: '3vw 10vw',\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={kegControlStyle}>\r\n        {currentlyVisibleState}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nKegControl.propTypes = {\r\n  allKombuchaList: PropTypes.object,\r\n  formVisibleOnPage: PropTypes.bool,\r\n  selectedKeg: PropTypes.object,\r\n  editingKeg: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allKombuchaList: state.allKombuchaList,\r\n    formVisibleOnPage: state.formVisibleOnPage,\r\n    selectedKeg: state.selectedKeg,\r\n    editingKeg: state.editingKeg\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(KegControl); ","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport KegControl from './KegContol';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <KegControl />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import formVisibleReducer from './form-visible-reducer';\r\nimport kegListReducer from './/keg-list-reducer';\r\nimport selectKegReducer from './select-keg-reducer';\r\nimport editingKegReducer from'./editing-keg-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  formVisibleOnPage: formVisibleReducer,\r\n  allKombuchaList: kegListReducer,\r\n  selectedKeg: selectKegReducer,\r\n  editingKeg: editingKegReducer\r\n});\r\n\r\nexport default rootReducer;","import * as a from '../actions/ActionTypes';\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type){\r\n    case a.TOGGLE_FORM :\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as a from '../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { name, brand, price, flavor, quantity, id } = action;\r\n  switch (action.type) {\r\n    case a.ADD_KEG :\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          name: name,\r\n          brand: brand,\r\n          price: price,\r\n          flavor: flavor,\r\n          quantity: quantity,\r\n          id: id\r\n        }\r\n      });\r\n    case a.DELETE_KEG :\r\n      const newState = { ...state };\r\n      delete newState[id];\r\n      return newState;\r\n    case a.SELL_KEG:\r\n      const decrasedQuantity = state[id].quantity - 1;\r\n      const updatedKegList = {...state, [id]:{...state[id], quantity:decrasedQuantity}}\r\n      return updatedKegList;\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as a from '../actions/ActionTypes';\r\n\r\nexport default (state=null ,action) => {\r\n  const { name, brand, price, flavor, quantity, id } = action;\r\n  switch(action.type){\r\n    case a.SELECT_KEG :\r\n      const newState = {\r\n        name: name,\r\n        brand: brand,\r\n        price: price,\r\n        flavor: flavor,\r\n        quantity: quantity,\r\n        id: id\r\n      };\r\n      return newState;\r\n    case a.UNSELECT_KEG:\r\n      return null;\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import * as a from '../actions/ActionTypes';\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type){\r\n    case a.EDITING_KEG :\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nstore.subscribe(() =>\r\n  console.log(store.getState())\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}